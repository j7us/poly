В качестве примера принципа открытости-закрытости можно привести модули(классы) в платежной системе,
если у нас уже есть класс обрабатывающий платежи с дебетовой карты, при этом версия приложения
уже функционирует на проде, но нам надо добавить управление платежами кредитной карты, то кажется большой
ошибкой дорабатывать изначальный класс, т.к возможно начнутся большие переработки и ошибки в логике,
которая уже успешно функционировала изначально. Поэтому класс оплат дебетовой карты будет закрытым.

Если понадобится "поправить" логику работы с дебетовыми картами, то возможно в этом случае класс
может быть открыт для изменений, так как что-то работает неправильно по задумке бизнес-логики
или по технической части.